spring.application.name=spendmanager
spring.ai.vertex.ai.gemini.project-id=flawless-star-468713-g6
spring.ai.vertex.ai.gemini.location=us-central1
spring.ai.google.genai.api-key=AIzaSyAGXDzH8YC-piaAoCMHJLGElvg3FbL0osE
spring.ai.vertex.ai.chat.options.model=gemini-2.5-flash

spring.ai.vertex.ai.embedding.project-id=flawless-star-468713-g6
spring.ai.vertex.ai.embedding.location=us-central1
spring.ai.vertex.ai.embedding.text.options.model=text-embedding-004
#spring.ai.vertex.ai.embedding.api-endpoint=https://us-central1-aiplatform.googleapis.com

# ----------------------------------------
# PostgreSQL Database Configuration
# ----------------------------------------

# 1. JDBC URL: Change to PostgreSQL
# Use the default port 5432 and replace 'your_db_name' with the name 
# of the database you created (e.g., spendmanager_dev).
spring.datasource.url=jdbc:postgresql://localhost:5432/spendmanager_dev

# 2. Driver Class Name: Change to PostgreSQL
spring.datasource.driverClassName=org.postgresql.Driver

# 3. Credentials: Use your PostgreSQL user and password
# The default user is usually 'postgres'
spring.datasource.username=postgres
spring.datasource.password=postgres

# 4. Spring Data JPA/Hibernate Configuration
# This setting tells Hibernate to automatically create/update the tables 
# based on your JPA entities. 'update' is usually fine for local dev.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# 1. Redis Connection Details (Change if not running locally on default port)
spring.ai.vectorstore.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

spring.data.redis.client-type=jedis

# 2. Spring AI Redis Vector Store Configuration
# This tells Spring AI to use Redis
spring.ai.vectorstore.redis.index-name=transaction-categories
spring.ai.vectorstore.redis.prefix=txn:
# This ensures Redis creates the necessary search index structure on startup
spring.ai.vectorstore.redis.initialize-schema=true

# 2. Specify the embedding model
# The recommended model for text embeddings (or gemini-embedding-001)
spring.ai.google.genai.embedding.options.model=text-embedding-004

# (Optional) Recommended setting for RAG/Vector Store use
spring.ai.google.genai.embedding.options.task-type=RETRIEVAL_DOCUMENT

# Disable H2 console as it is no longer needed
spring.h2.console.enabled=false

# 1. Silence the entire application by setting the root level to WARNING or ERROR.
# WARNING is generally safer than ERROR, as it catches significant issues.
logging.level.root=ERROR 
# 2. Re-enable logging for your custom services package
logging.level.com.everrich.spendmanager.service=INFO
logging.level.com.everrich.spendmanager.controller=INFO 
# Use DEBUG if you converted your System.out.println calls to log.debug()

# Optional: Silence overly noisy specific packages (like the HTTP client or database driver)
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.org.thymeleaf=WARN

# Forces Thymeleaf to load the template from disk on every request.
# This should always be 'false' in development (dev/local) environments.
spring.thymeleaf.cache=false

# Optional: Ensure static resources (like your CSS) are also not aggressively cached
spring.web.resources.cache.period=0